@startuml

title __CLIENT's Class Diagram__\n

  namespace  {
    class ComponentFrame {
        + ComponentFrame()
        + ComponentFrame()
    }
  }
  

  namespace  {
    class FolderModel {
        {static} # cached : String[][]
        ~ columnNames : String[]
        ~ columnTypes : Class[]
        ~ folder : Folder
        ~ messages : Message[]
        + getColumnClass()
        + getColumnCount()
        + getColumnName()
        + getMessage()
        + getRowCount()
        + getValueAt()
        + setFolder()
        # getCachedData()
    }
  }
  

  namespace  {
    class FolderTreeNode {
        # folder : Folder
        # hasLoaded : boolean
        + FolderTreeNode()
        + getChildCount()
        + getFolder()
        + isLeaf()
        + toString()
        # loadChildren()
    }
  }
  

  namespace  {
    class FolderViewer {
        ~ model : FolderModel
        ~ scrollpane : JScrollPane
        ~ table : JTable
        + FolderViewer()
        + FolderViewer()
        + setFolder()
    }
  }
  

  namespace  {
    class FolderViewer.FolderPressed {
        + valueChanged()
    }
  }
  

  namespace  {
    class MessageViewer {
        ~ dataHandler : DataHandler
        ~ displayed : Message
        ~ headers : TextArea
        ~ mainbody : Component
        ~ verb : String
        + MessageViewer()
        + MessageViewer()
        + setCommandContext()
        + setMessage()
        # addToolbar()
        # getBodyComponent()
        # loadHeaders()
    }
  }
  

  namespace  {
    class MessageViewer.StructureAction {
        ~ sb : StringBuffer
        + actionPerformed()
        # dumpPart()
    }
  }
  

  namespace  {
    class MultipartViewer {
        # dh : DataHandler
        # verb : String
        + MultipartViewer()
        + setCommandContext()
        # getComponent()
        # setupDisplay()
        # setupErrorDisplay()
    }
  }
  

  namespace  {
    class MultipartViewer.AttachmentViewer {
        ~ bp : BodyPart
        + AttachmentViewer()
        + actionPerformed()
    }
  }
  

  namespace  {
    class SimpleAuthenticator {
        ~ frame : Frame
        ~ password : String
        ~ username : String
        + SimpleAuthenticator()
        # getPasswordAuthentication()
        - constrain()
    }
  }
  

  namespace  {
    class SimpleClient {
        {static} ~ fv : FolderViewer
        {static} ~ mv : MessageViewer
        {static} ~ url : Vector
        {static} + main()
    }
  }
  

  namespace  {
    class StoreTreeNode {
        # display : String
        # folder : Folder
        # store : Store
        + StoreTreeNode()
        + getChildCount()
        + isLeaf()
        + toString()
        # loadChildren()
    }
  }
  

  namespace  {
    class TextViewer {
        - dh : DataHandler
        - text_area : JTextArea
        - verb : String
        + TextViewer()
        + setCommandContext()
        + setInputStream()
    }
  }
  

  namespace  {
    class TreePress {
        + valueChanged()
    }
  }
  

  ComponentFrame -up-|> javax.swing.JFrame
  FolderModel -up-|> javax.swing.table.AbstractTableModel
  FolderTreeNode -up-|> javax.swing.tree.DefaultMutableTreeNode
  FolderViewer -up-|> javax.swing.JPanel
  FolderViewer +-down- FolderViewer.FolderPressed
  FolderViewer.FolderPressed .up.|> javax.swing.event.ListSelectionListener
  MessageViewer .up.|> javax.activation.CommandObject
  MessageViewer -up-|> javax.swing.JPanel
  MessageViewer +-down- MessageViewer.StructureAction
  MessageViewer.StructureAction .up.|> java.awt.event.ActionListener
  MultipartViewer .up.|> javax.activation.CommandObject
  MultipartViewer -up-|> javax.swing.JPanel
  MultipartViewer +-down- MultipartViewer.AttachmentViewer
  MultipartViewer.AttachmentViewer .up.|> java.awt.event.ActionListener
  SimpleAuthenticator -up-|> javax.mail.Authenticator
  StoreTreeNode -up-|> javax.swing.tree.DefaultMutableTreeNode
  TextViewer .up.|> javax.activation.CommandObject
  TextViewer -up-|> javax.swing.JPanel
  TreePress .up.|> javax.swing.event.TreeSelectionListener


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
